[{"content":"1 测试方式分类 根据测试内容划，可划分为 4 类\n分类 描述 功能性测试 测试软件功能是否如预期一样正常，包含兼容性测试 性能测试 对系各项性能指标进行测试，如页面响应速度和渲染速度等 特性测试 测试不同平台的差异，如 PC 和移动端的兼容性差异 安全测试 测试数据传输和存储的安全性及访问资源的权限 RAD (Rap Application Development, 快速应用开发) 又称 V 模型，RAD 模型大体可以划分为下图的阶段\n根据测试级别，划分为 5 类\n分类 描述 单元测试 对单一接口或单元级别功能进行测试 集成测试 迭代过程中每次集成后进行的测试，保证每次小幅迭代的功能点都能被测试并通过验证 接口测试 对系统接口的测试，可使用 Mock 数据做冒烟测试 系统测试 根据系统设计书的指导对系统的功能点进行测试，发现软件潜在问题，保证系统正常运行 验收测试 根据功能说明书的功能点进行测试，保证产品顺利交付给用户（客户） W 模型增加了软件开发各阶段中同步进行的验证和确认活动\n2 自动化测试 自动化测试，将人工测试中重复的测试步骤实现机器化、代码化，避免人工操作与结果比较，并利用工具进行全面、可反复的测试回溯的方法\n“ 三层金字塔” 的分层自动化测试模型\n分层 实践 UI 层 人工测试及用户界面的自动化测试 Service 层 通过自动化框架或工具进行接口测试 Unit 层 基于最小模块进行单元测试 3 Python自动化测试 单元测试框架，Java 的 JUnit 和 TestNG，PHP 的 PHPUnit, Python 的 unittest 和 pytest等\nPython 适合做自动化测试的优势：\n① Python 自动化测试脚本编写简单方便\n② 有成熟的自动化框架（Selenium 等）\n③ 丰富的类库支持（HTTP网络请求、文件流处理、Socket编程、多线程等）\nPython 自动化测试实际应用\n4 接口测试和UI测试 接口测试，对某个服务的函数或者对外暴露的访问接口进行测试，测试的目的是检测该接口是否稳定可靠以及是否符合预设的用例测试结构。一般分为下面3种：\n基于 HTTP 接口测试\n基于 Web 服务的接口测试\n基于其他通信协议的接口测试（Websocket 等）\nUI 测试，基于用户界面进行测试，需要针对页面的特定内容和功能进行。根据平台不同，可分为 Web 端 UI 测试和移动端 UI 测试\nWeb 端 UI测试\n① Web 整体页面测试\n② Web 内容测试\n③ Web 导航测试\n④ Web 图形测试\n⑤ Web 表单测试\n⑥ Web 兼容性测试（多平台兼容行）\n移动端 UI 测试\n① 基础功能测试，注意边界值、异常数据等。分析需求和功能要求，对流程梳理，以跑通基础功能为主\n② 数据交互测试，对页面上的数据流进行测试（也要测边界和特殊值）\n③ 性能测试，页面响应速度、资源加载、流量消耗、CPU占有率、电量的变化及APP稳定性的测试\n接口测试和 UI 测试的差异对比\n对比项 接口测试 UI测试 涉及页面 NO YES 需要跨平台测试 NO YES 复杂度 LOW HIGH 性能要求 MIDDLE HIGH ","date":"2025-05-21T15:27:03+08:00","permalink":"https://Xinen-hardwork.github.io/hugo-dev/zh-cn/p/%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95%E5%9F%BA%E7%A1%80/","title":"自动化测试基础"}]